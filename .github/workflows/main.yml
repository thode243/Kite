name: Update NIFTY Sheet (Market Hours)

on:
  push:
    branches:
      - main
  schedule:
    - cron: "*/1 3-9 * * 1-5"   # Every minute 09:00‚Äì15:29 IST, Mon‚ÄìFri
    - cron: "0 10 * * 1-5"      # At 15:30 IST exact
  workflow_dispatch:

jobs:
  update-nifty:
    runs-on: ubuntu-latest
    concurrency:
      group: nifty-update
      cancel-in-progress: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas gspread oauth2client urllib3 pytz kiteconnect

      - name: Set up Google credentials
        run: |
          echo "${GOOGLE_CREDENTIALS}" > "$GITHUB_WORKSPACE/service_account.json"
          test -s "$GITHUB_WORKSPACE/service_account.json" || { echo "‚ùå Credentials file is empty"; exit 1; }
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Kite credentials
        run: |
          echo "${ACCESS_TOKEN}" > "$GITHUB_WORKSPACE/access_token.txt"
          test -s "$GITHUB_WORKSPACE/access_token.txt" || { echo "‚ùå Kite access token is empty"; exit 1; }
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Run NIFTY update script with market check
        env:
          SHEET_ID: ${{ secrets.SHEET_ID }}
          POLLING_INTERVAL: 60
          GOOGLE_CREDENTIALS_PATH: ${{ github.workspace }}/service_account.json
          KITE_API_KEY: ${{ secrets.API_KEY }}
          KITE_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          echo "‚è∞ Checking if market is open..."
          python - <<'EOF'
          import datetime, pytz, sys
          ist = pytz.timezone("Asia/Kolkata")
          now = datetime.datetime.now(ist).time()
          market_open = datetime.time(9, 10)
          market_close = datetime.time(15, 30)
          if not (market_open <= now <= market_close):
              print("üìâ Market is closed, exiting workflow.")
              sys.exit(0)
          EOF
          python fetch_data.py

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: nifty-update-logs
          path: option_chain_updater2.log
